# Generated by Django 5.0.2 on 2025-04-24 10:45

import django.core.validators
import django.db.models.deletion
import django_ckeditor_5.fields
import mptt.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Animal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255, unique=True, verbose_name='Вид животного')),
                ('image', models.ImageField(upload_to='animals')),
            ],
            options={
                'verbose_name': 'Животное',
                'verbose_name_plural': 'Животные',
            },
        ),
        migrations.CreateModel(
            name='ArticleForOrders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.PositiveIntegerField()),
                ('letter_code', models.CharField(max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Имя бренда')),
                ('image', models.ImageField(upload_to='brands_images', verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Бренд',
                'verbose_name_plural': 'Бренды',
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, unique=True, verbose_name='Название акции')),
                ('percent', models.PositiveIntegerField(verbose_name='Процент')),
                ('start_sale', models.DateTimeField(verbose_name='Время начала акции')),
                ('stop_sale', models.DateTimeField(verbose_name='Время окончания акции')),
                ('image', models.ImageField(default='default/action.png', upload_to='sale', verbose_name='Баннер')),
            ],
            options={
                'verbose_name': 'Акция',
                'verbose_name_plural': 'Акции',
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(blank=True, max_length=120, null=True, verbose_name='Город')),
                ('street', models.CharField(blank=True, max_length=40, null=True, verbose_name='Улица / Переулок')),
                ('house_number', models.CharField(blank=True, max_length=4, null=True, verbose_name='Номер дома')),
            ],
            options={
                'verbose_name': 'Магазин',
                'verbose_name_plural': 'Магазины',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1500, unique=True, verbose_name='Название статьи')),
                ('text', django_ckeditor_5.fields.CKEditor5Field(verbose_name='Текст статьи')),
                ('image', models.FileField(help_text='Изображение должно быть в формате avif,преобразовать можно <a href="https://imagetostl.com/ru/convert/file/jpg/to/avif">тут</a>', upload_to='articles_images', validators=[django.core.validators.FileExtensionValidator(['avif'])], verbose_name='Изображение')),
                ('date_create', models.DateTimeField(auto_now_add=True)),
                ('read_time', models.CharField(max_length=255, verbose_name='Время чтения')),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.animal', verbose_name='Животные')),
            ],
            options={
                'verbose_name': 'Статья',
                'verbose_name_plural': 'Статьи',
            },
        ),
        migrations.CreateModel(
            name='CategoryProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название категории')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.categoryproduct', verbose_name='Имя родительсокй категории')),
            ],
            options={
                'verbose_name': 'Категория продукта',
                'verbose_name_plural': 'Категории продуктов',
            },
        ),
        migrations.CreateModel(
            name='PayCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_number', models.CharField(max_length=16, unique=True, verbose_name='Номер карты')),
                ('cvc', models.PositiveIntegerField(verbose_name='CVC')),
                ('expiration_date', models.CharField(default='', max_length=5, verbose_name='Дата окончания срока действия карты')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=100, verbose_name='Баланс на карте')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Карточка',
                'verbose_name_plural': 'Карточки',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, unique=True, verbose_name='Название продукта')),
                ('image_prev', models.FileField(help_text='Изображение должно быть в формате avif, преобразовать можно <a href="https://imagetostl.com/ru/convert/file/jpg/to/avif">тут</a>', upload_to='products_images', validators=[django.core.validators.FileExtensionValidator(['avif'])], verbose_name='Обязательное изображение')),
                ('price', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Цена товара за единицу')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание товара')),
                ('key_features', models.TextField(blank=True, null=True, verbose_name='Ключевые особенности')),
                ('compound', models.TextField(blank=True, null=True, verbose_name='Состав')),
                ('guaranteed_analysis', models.TextField(blank=True, null=True, verbose_name='Гарантированный анализ')),
                ('nutritional_supplements', models.TextField(blank=True, null=True, verbose_name='Пищевые добавки')),
                ('quantity', models.PositiveIntegerField(verbose_name='Количество товара')),
                ('date_create', models.DateTimeField(auto_now_add=True)),
                ('sales_counter', models.PositiveIntegerField(default=0, verbose_name='Сколько раз продан')),
                ('animal', models.ManyToManyField(to='main.animal', verbose_name='Животное')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.brand', verbose_name='Бренд товара')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.categoryproduct', verbose_name='Категория продукта')),
                ('sale', models.ForeignKey(blank=True, help_text='Если товар не на акции, необходимо задать акцию с 0% скидки', null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.sale', verbose_name='Товар на акции')),
            ],
            options={
                'verbose_name': 'Продукт',
                'verbose_name_plural': 'Продукты',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=16, verbose_name='Номер заказа')),
                ('data_create', models.DateTimeField(auto_now_add=True, verbose_name='Время заказа')),
                ('check_order', models.FileField(upload_to='checks', verbose_name='Чек')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Сумма заказа')),
                ('order_status', models.CharField(choices=[('Оформлен', 'Оформлен'), ('Ожидает оплату', 'Ожидает оплату'), ('Оплачен', 'Оплачен'), ('Подтвержден', 'Подтвержден'), ('Выполнен', 'Выполнен'), ('Аннулирован', 'Аннулирован'), ('Ошибка оплаты', 'Ошибка оплаты')], default='Оформлен', max_length=15, verbose_name='Статус')),
                ('order_item', models.JSONField(verbose_name='Детали заказа')),
                ('order_show', models.BooleanField(default=True, verbose_name='Показывать заказ пользователю ')),
                ('order_receiving', models.CharField(choices=[('Самовывоз', 'Самовывоз'), ('Доставка курьером', 'Доставка курьером')], default='Самовывоз', max_length=20, verbose_name='Способ получения заказа')),
                ('city', models.CharField(blank=True, max_length=120, null=True, verbose_name='Город')),
                ('street', models.CharField(blank=True, max_length=40, null=True, verbose_name='Улица / Переулок')),
                ('house_number', models.CharField(blank=True, max_length=4, null=True, verbose_name='Номер дома')),
                ('entrance_number', models.CharField(blank=True, max_length=2, null=True, verbose_name='Номер подъезда')),
                ('apartment_number', models.CharField(blank=True, max_length=4, null=True, verbose_name='Номер квартиры')),
                ('postal_code', models.CharField(blank=True, max_length=6, null=True, verbose_name='Почтовый индекс')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('pay_card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.paycard', verbose_name='Карта')),
                ('products', models.ManyToManyField(blank=True, null=True, to='main.product', verbose_name='Продукты')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
        migrations.CreateModel(
            name='ImageProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products_images', verbose_name='Изображение продукта')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Изображение продукта',
                'verbose_name_plural': 'Изображения продуктов',
            },
        ),
        migrations.CreateModel(
            name='CountItemProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveIntegerField(default=0, verbose_name='Количество продукта')),
                ('value', models.FloatField(verbose_name='Количество массы')),
                ('unit', models.CharField(choices=[('л', 'л'), ('кг', 'кг'), ('шт', 'шт')], max_length=50, verbose_name='Единица измерения')),
                ('percent', models.PositiveIntegerField(verbose_name='Процент от стоимости единицы товара')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Количество товара',
                'verbose_name_plural': 'Количество товара',
                'ordering': ['product'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=19, verbose_name='Номер телефона')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('city', models.CharField(blank=True, max_length=120, null=True, verbose_name='Город')),
                ('street', models.CharField(blank=True, max_length=40, null=True, verbose_name='Улица / Переулок')),
                ('house_number', models.CharField(blank=True, max_length=4, null=True, verbose_name='Номер дома')),
                ('entrance_number', models.CharField(blank=True, max_length=2, null=True, verbose_name='Номер подъезда')),
                ('apartment_number', models.CharField(blank=True, max_length=4, null=True, verbose_name='Номер квартиры')),
                ('postal_code', models.CharField(blank=True, max_length=6, null=True, verbose_name='Почтовый индекс')),
                ('subscribe', models.BooleanField(default=False, verbose_name='Подписка')),
                ('user', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Профиль пользователя',
                'verbose_name_plural': 'Профили пользователей',
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст отзыва')),
                ('pet', models.CharField(max_length=255, verbose_name='Kличка питомца')),
                ('phone_number', models.CharField(blank=True, max_length=19, null=True, verbose_name='Номер телефона')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
            },
        ),
    ]
